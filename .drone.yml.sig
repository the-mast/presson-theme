eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICBpbWFnZTogdGhlbWFzdC9kb2NrZXItd3AtdGhlbWUtYnVpbGQ6bGF0ZXN0CiAgICBjb21tYW5kczoKICAgICAgLSBucG0gaW5zdGFsbCAtZyBndWxwLWNsaSBib3dlciAmJiBucG0gaW5zdGFsbCAtLXVuc2FmZS1wZXJtCiAgICAgIC0gZ2l0IGNsb25lIC0tZGVwdGg9MSBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzLUNvZGluZy1TdGFuZGFyZHMvV29yZFByZXNzLUNvZGluZy1TdGFuZGFyZHMuZ2l0IHdwY3MKICAgICAgLSBucG0gaW5zdGFsbAogICAgICAtIG5wbSBpbnN0YWxsIC1nIGd1bHAtY2xpCiAgICAgIC0gY2Qgd3BjcyAmJiBjb21wb3NlciBpbnN0YWxsCiAgICAgIC0gZ3VscCBwaHBjcwogICAgICAtIGd1bHAgcGhwY2JmCiAgICAgIC0gZ3VscCBidWlsZCAmJiBndWxwIHBhY2thZ2UKICAgICAgLSBjZCAuLgogICAgICAtIGdpdCBjb25maWcgcmVtb3RlLm9yaWdpbi51cmwgJ2h0dHBzOi8vJHtHSVRIVUJfVE9LRU59QGdpdGh1Yi5jb20vdGhlLW1hc3Qvd2Vic3RhcnRlcmtpdC1zcGlrZS5naXQnCiAgICAgIC0gZ2l0IHRhZyB2MC4wLjEtJHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGdpdCBwdXNoIG9yaWdpbiB2MC4wLjEtJHtEUk9ORV9DT01NSVRfU0hBfQoKICBkZXBsb3k6CiAgICBpbWFnZTogZHJpbGxzdGVyL2Ryb25lLXJzeW5jOmxhdGVzdAogICAgaG9zdHM6IFsgJyR7UkVNT1RFX0lQX0FERFJFU1N9JyBdCiAgICBrZXk6ICR7UkVNT1RFX1JTQV9LRVl9CiAgICBzb3VyY2U6IC4vcGFja2FnZWQvKgogICAgdGFyZ2V0OiAvdmFyL3d3dy9odG1sL3dwLWNvbnRlbnQvdGhlbWVzL21hc3QtdGhlbWUKICAgIGRlbGV0ZTogdHJ1ZQogICAgc2NyaXB0OgogICAgICAgICAgLSBjZCAvdmFyL3d3dy9odG1sL3dwLWNvbnRlbnQvdGhlbWVzL21hc3QtdGhlbWUKICAgICAgICAgIC0gdW56aXAgLW9mICouemlwCiAgICAgICAgICAtIHJtICouemlwCgogIG5vdGlmeToKICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICB3ZWJob29rOiBodHRwczovL2hvb2tzLnNsYWNrLmNvbS9zZXJ2aWNlcy9UM1YwWFJBNVIvQjQxVDU3NkZKL2txcDhQTWhDOThHU0R2UHR3R3l4aWJJOQogICAgY2hhbm5lbDogdGhlLW1hc3Qtc3RhdHVzCiAgICB1c2VybmFtZTogZHJvbmUtY2kKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0KICAgIGljb25fdXJsOiBodHRwOi8vcGx1Z2lucy5kcm9uZS5pby9sb2dvLnN2ZwogICAgdGVtcGxhdGU6IHwKICAgICAge3sgcmVwby5uYW1lIH19IGZpbmlzaGVkIGJ1aWxkIHt7IGJ1aWxkLm51bWJlciB9fQogICAgICAgIHdpdGggYSBzdGF0dXMgb2Yge3sgYnVpbGQuc3RhdHVzIH19Cg.RqXCe9Pjdhr5mQ18c9fGIU8JbL5pW0iwx4_SWtkGjIY